■タグの作成と管理
　GitではコミットごとにIDが付与され、これを使って特定のバージョンのファイルを取り出すことが可能になっています。しかし、IDは40文字と長く、またランダムな文字列が使われるため、これを覚えておくことは困難です。そこで、Gitでは特定のコミットに名前を付ける「タグ（tag）」という機能が用意されています。付けられたタグはコミットIDやブランチ名の代わりとして指定でき、また任意のタイミングでリネームしたり削除することも可能です。

●gitコマンドでのタグの作成と削除
　gitコマンドを使ってタグを作成するには、「git tag」コマンドを使用します。作業中のブランチで最後に実行したコミットにタグを付けるには、タグ名を引数として指定してgit tagコマンドを実行します。たとえば「v1.0」というタグを付けるには、以下のようにします。

＊----
$ git tag v1.0
＊----

　タグを指定する際、「-m」オプションでそのタグに対する説明文（タグメッセージ）を設定することも可能です。たとえば「version 1.0」という説明文を設定する場合、以下のように実行します。

＊----
$ git tag -m "version 1.0" v1.0
＊----

　なお、-mオプションを省略すると、コミットメッセージがタグメッセージとして使われます。

　また、タグ名の後にコミットIDを指定することで、そのIDに合致する過去のコミットにタグを付けることも可能です。たとえば「f0611016549083e13ece7a51b2cf856cef64c116」というIDのコミットに「v0.9」というタグを付けるには、次のように実行します。

＊----
$ git tag v0.9 f0611016549083e13ece7a51b2cf856cef64c116
＊----

　この場合もコミットIDはすべて入力する必要はなく、先頭からの数文字のみの入力でも自動的に補完されます。

＊----
$ git tag v0.9 f061
＊----

　作成されているタグ一覧は、「git tag」コマンドで確認できます。

＊----
$ git tag
v0.9
v1.0
＊----

　また、「-n」オプションを付けることでタグメッセージを確認できます。

＊----
$ git tag -n
v0.9            merge experimental branch
v1.0            version 1.0
＊----

　作成したタグは、チェックアウトやマージの際にブランチ名やコミットIDの代わりに使用することができます。たとえば次のように実行することで、「v0.9」というタグが付けられたコミットの時点のファイルを取り出せます。

＊----
$ git checkout v0.9
＊----

　タグを削除するには、「-d」オプションを使います。たとえば「v0.9
」というタグを削除するには次のように実行します。

＊----
$ git tag -d v0.9
Deleted tag 'v0.9' (was f061101)
＊----

●SourceTreeでのタグの作成と削除
　SourceTreeでタグを追加するには、ツールバーの「タグ」ボタンをクリックして「タグを追加」画面を開き、作成するタグ名とタグを付けるコミットを指定します（*図1）。デフォルトでは現在チェックアウトしているコミットに対しタグを付ける処理を行いますが、「指定のコミット」を選択してコミットを指定することで任意のコミットについてタグを付けることが可能です。
　また、「タグを削除」画面ではタグの削除を行えます。ここで削除対象のタグを選択して「削除」をクリックすると指定したタグを削除できます。

☆図1 「タグを追加」画面
st_tag

☆図2 「タグを削除」画面
st_tag2
